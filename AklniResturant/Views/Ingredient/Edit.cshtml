@model Ingredient
@{
    ViewData["Title"] = "Edit Ingredient";
}

<h2 class="text-center mb-4">Edit Ingredient</h2>

<form asp-action="Edit" method="post" class="card shadow p-4 col-md-6 mx-auto">
    @Html.AntiForgeryToken()

    <div asp-validation-summary="ModelOnly" class="text-danger mb-3"></div>

    <div class="form-group mb-3">
        <label asp-for="IngredientId" class="form-label"></label>
        <input asp-for="IngredientId" class="form-control" readonly />
    </div>

    <div class="form-group mb-3">
        <label asp-for="Name" class="form-label"></label>
        <input asp-for="Name" class="form-control" />
        <span asp-validation-for="Name" class="text-danger"></span>
    </div>

    @* Optional: display related products if loaded *@
    @if (Model.ProdIngredients != null && Model.ProdIngredients.Any())
    {
        <div class="mt-4">
            <h5>Used In Products:</h5>
            <ul class="list-group">
                @foreach (var pi in Model.ProdIngredients)
                {
                    <li class="list-group-item">
                        @pi.Product?.Name
                    </li>
                }
            </ul>
        </div>
    }

    <div class="mt-4 d-flex justify-content-between">
        <a asp-action="Index" class="btn btn-secondary">Back to List</a>
        <button type="submit" class="btn btn-primary">Save Changes</button>
    </div>
</form>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}

